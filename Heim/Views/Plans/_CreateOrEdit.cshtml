@model ShiftRight.Heim.Models.PlanViewModel
		
@{
	string mode = "create";
	var view = ViewContext.View as System.Web.Mvc.RazorView;
	if(view != null) {
		mode = Path.GetFileNameWithoutExtension(view.ViewPath).ToLower();
	}
}

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="main">
	@using(Html.BeginForm("Edit", "Plans", FormMethod.Post, new { enctype = "multipart/form-data" })) {
		@*@Html.ValidationSummary()*@
		
		if(mode == "edit" || mode == "details") {
			@Html.HiddenFor(model => model.ID)
		}
	
		<div class="editor-label">
			@Html.LabelFor(model => model.Name)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Name)
			@Html.ValidationMessageFor(model => model.Name)
		</div>

		<div class="break"></div>

		<div class="editor-label">
			@Html.LabelFor(model => model.Area.Land)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Area.Land)
			@Html.ValidationMessageFor(model => model.Area.Land)
		</div>

		<div class="break"></div>

		<div class="editor-label">
			@Html.LabelFor(model => model.Area.Usage)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Area.Usage)
			@Html.ValidationMessageFor(model => model.Area.Usage)
		</div>
		
		<div class="break"></div>
		
		<div class="editor-label">
			@Html.LabelFor(model => model.ModelFile)
			@if(Model != null && Model.ModelFilePath != null) {
				<a class="download" href="@Href(Model.ModelFilePath)">[ Download ]</a>
			}
		</div>
		<div class="editor-field">
			@Html.HiddenFor(m => m.ModelFilePath)
			<input type="file" name="ModelFile" />
		</div>

		<div class="break"></div>

		<div class="editor-label">
			@Html.LabelFor(model => model.PreviewImageFile)
		</div>
		<div class="editor-field">

			@if(Model != null){
			<div class="preview">
				<img src="@Href(Model.PreviewImage)" alt="Preview" />
			</div>
			}
		
			<input type="file" id="PreviewImageFile" name="PreviewImageFile" accept="image/*" />
			@Html.ValidationMessageFor(model => model.PreviewImageFile)
		</div>

		<div class="break"></div>
		<p>
			<input type="submit" value="Save" />
		</p>
	}
</div>

@if(mode == "edit" || mode == "details") {
	<div class="floors aside">
		<h3>Floors <span class="user-actions">@Html.ActionLink("Add", "CreateBlank", "Floors", new { planId = Model.ID }, null)</span></h3>

		@foreach(var floor in Model.Floors) {
			<div class="editor-field">
				@Html.ActionLink("Floor " + floor.FloorNumber, "Edit", "Floors", new { ID = floor.ID }, null)

				@Html.ActionLink("Delete", "Delete", "Floors", new { id = floor.ID }, null)
			</div>
		}

	</div>
}